{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eitan\\\\Documents\\\\dev\\\\javascript\\\\Severly\\\\client\\\\src\\\\components\\\\ListServers.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport EditServer from \"./EditServer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListServers() {\n  _s();\n\n  const [servers, setServers] = useState([]);\n\n  const getServers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/get\");\n      const data = await response.json();\n      setServers(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteServer = async id => {\n    try {\n      const response = await fetch(\"http://localhost:3001/delete/\" + id, {\n        method: \"DELETE\"\n      });\n      setServers(servers.filter(server => server._id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const toggleServer = async server => {\n    try {\n      const body = {\n        _IP: server._ip,\n        _Name: server._name,\n        _TypeName: server._title,\n        _TypePPM: server._ppm,\n        _IsRunning: !server._isrunning\n      };\n      const res = await fetch(\"http://localhost:3001/update/\" + server._id, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getServers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Running\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price So Far\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: servers.map(server => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: server._isrunning ? \"bg-success text-white\" : \"bg-secondary text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: server._name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: server._ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: server._timerunning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: server._title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: server._timerunning * server._ppm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"toggle\",\n              className: \"btn btn-warning\",\n              onClick: () => toggleServer(server),\n              children: server._isrunning ? \"Turn Off\" : \"Turn On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditServer, {\n              server: server\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"delete\",\n              className: \"btn btn-danger\",\n              onClick: () => deleteServer(server._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, server._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ListServers, \"xfSG+wryFcgzvchjWZabd3QMWJw=\");\n\n_c = ListServers;\nexport default ListServers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListServers\");","map":{"version":3,"sources":["C:/Users/eitan/Documents/dev/javascript/Severly/client/src/components/ListServers.js"],"names":["React","Fragment","useEffect","useState","EditServer","ListServers","servers","setServers","getServers","response","fetch","data","json","err","console","error","message","deleteServer","id","method","filter","server","_id","toggleServer","body","_IP","_ip","_Name","_name","_TypeName","_title","_TypePPM","_ppm","_IsRunning","_isrunning","res","headers","JSON","stringify","window","location","map","_timerunning"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditServer from \"./EditServer\";\r\n\r\nfunction ListServers() {\r\n\tconst [servers, setServers] = useState([]);\r\n\r\n\tconst getServers = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"http://localhost:3001/get\");\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetServers(data);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteServer = async (id) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"http://localhost:3001/delete/\" + id, {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t});\r\n\r\n\t\t\tsetServers(servers.filter((server) => server._id !== id));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleServer = async (server) => {\r\n\t\ttry {\r\n\t\t\tconst body = {\r\n\t\t\t\t_IP: server._ip,\r\n\t\t\t\t_Name: server._name,\r\n\t\t\t\t_TypeName: server._title,\r\n\t\t\t\t_TypePPM: server._ppm,\r\n\t\t\t\t_IsRunning: !server._isrunning,\r\n\t\t\t};\r\n\t\t\tconst res = await fetch(\"http://localhost:3001/update/\" + server._id, {\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify(body),\r\n\t\t\t});\r\n\r\n\t\t\twindow.location = \"/\";\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetServers();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<table className=\"table mt-5 text-center\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>IP</th>\r\n\t\t\t\t\t\t<th>Time Running</th>\r\n\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t<th>Price So Far</th>\r\n\r\n\t\t\t\t\t\t<th>Toggle</th>\r\n\t\t\t\t\t\t<th>Edit</th>\r\n\t\t\t\t\t\t<th>delete</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{servers.map((server) => (\r\n\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\tkey={server._id}\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tserver._isrunning\r\n\t\t\t\t\t\t\t\t\t? \"bg-success text-white\"\r\n\t\t\t\t\t\t\t\t\t: \"bg-secondary text-white\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<td>{server._name}</td>\r\n\t\t\t\t\t\t\t<td>{server._ip}</td>\r\n\t\t\t\t\t\t\t<td>{server._timerunning}</td>\r\n\t\t\t\t\t\t\t<td>{server._title}</td>\r\n\t\t\t\t\t\t\t<td>{server._timerunning * server._ppm}</td>\r\n\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tid=\"toggle\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => toggleServer(server)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{server._isrunning ? \"Turn Off\" : \"Turn On\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<EditServer server={server} />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tid=\"delete\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => deleteServer(server._id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default ListServers;\r\n"]},"metadata":{},"sourceType":"module"}