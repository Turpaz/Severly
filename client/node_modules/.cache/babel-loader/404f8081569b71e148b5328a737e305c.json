{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eitan\\\\Documents\\\\dev\\\\javascript\\\\Severly\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addServer(),\n        children: \"Add server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JsonDataDisplay(getServers())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\n\nasync function getServers() {\n  const response = await fetch(\"http://localhost:3001/get\", {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n\nasync function updateServer() {}\n\nasync function addServer() {\n  const response = await fetch(\"http://localhost:3001/add\", {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      _IP: \"127.0.0.1\",\n      _Name: \"Server1\",\n      _TypeName: \"t1.micro\",\n      _TypePPM: 1\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n\nfunction JsonDataDisplay(info) {\n  let jsxResult = \"\";\n\n  for (let i = 0; i < info.length; i++) {\n    jsxResult += `<div>${info[i]._Name}</div>`;\n    console.log(info[i]._Name);\n  }\n\n  return jsxResult;\n}\n\n_c2 = JsonDataDisplay;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"JsonDataDisplay\");","map":{"version":3,"sources":["C:/Users/eitan/Documents/dev/javascript/Severly/client/src/App.js"],"names":["React","App","addServer","JsonDataDisplay","getServers","response","fetch","method","mode","headers","data","json","console","log","updateServer","body","JSON","stringify","_IP","_Name","_TypeName","_TypePPM","info","jsxResult","i","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAEd,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACC;AAAQ,QAAA,OAAO,EAAE,MAAMC,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAA,gBACEC,eAAe,CAACC,UAAU,EAAX;AADjB;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;KAZQH,G;;AAcT,eAAeG,UAAf,GAA4B;AAC3B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;AACzDC,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,IAAI,EAAE,MAFmD;AAGzDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAHgD,GAA9B,CAA5B;AAKA,QAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAOA,IAAP;AACA;;AACD,eAAeI,YAAf,GAA8B,CAE7B;;AACD,eAAeZ,SAAf,GAA2B;AAC1B,QAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;AACzDC,IAAAA,MAAM,EAAE,MADiD;AAEzDC,IAAAA,IAAI,EAAE,MAFmD;AAGzDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHgD;AAIzDM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,MAAAA,GAAG,EAAE,WADe;AAEpBC,MAAAA,KAAK,EAAE,SAFa;AAGpBC,MAAAA,SAAS,EAAE,UAHS;AAIpBC,MAAAA,QAAQ,EAAE;AAJU,KAAf;AAJmD,GAA9B,CAA5B;AAWA,QAAMX,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAOA,IAAP;AACA;;AAED,SAASP,eAAT,CAAyBmB,IAAzB,EAA+B;AAC9B,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACrCD,IAAAA,SAAS,IAAK,QAAOD,IAAI,CAACE,CAAD,CAAJ,CAAQL,KAAM,QAAnC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACE,CAAD,CAAJ,CAAQL,KAApB;AACA;;AAED,SAAOI,SAAP;AACA;;MATQpB,e;AAWT,eAAeF,GAAf","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<button onClick={() => addServer()}>Add server</button>\n\t\t\t</header>\n\t\t\t<div>\n\t\t\t\t{JsonDataDisplay(getServers())}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nasync function getServers() {\n\tconst response = await fetch(\"http://localhost:3001/get\", {\n\t\tmethod: 'GET',\n\t\tmode: 'cors',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t});\n\tconst data = await response.json();\n\tconsole.log(data);\n\n\treturn data;\n}\nasync function updateServer() {\n\n}\nasync function addServer() {\n\tconst response = await fetch(\"http://localhost:3001/add\", {\n\t\tmethod: 'POST',\n\t\tmode: 'cors',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({\n\t\t\t_IP: \"127.0.0.1\",\n\t\t\t_Name: \"Server1\",\n\t\t\t_TypeName: \"t1.micro\",\n\t\t\t_TypePPM: 1\n\t\t})\n\t});\n\tconst data = await response.json();\n\tconsole.log(data);\n\n\treturn data;\n}\n\nfunction JsonDataDisplay(info) {\n\tlet jsxResult = \"\";\n\n\tfor (let i = 0; i < info.length; i++) {\n\t\tjsxResult += `<div>${info[i]._Name}</div>`;\n\t\tconsole.log(info[i]._Name);\n\t}\n\n\treturn jsxResult;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}