{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eitan\\\\Documents\\\\dev\\\\javascript\\\\Severly\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addServer(),\n        children: \"Add server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }, this);\n}\n\n_c = App;\n\nasync function getServers() {\n  const response = await fetch(\"http://localhost:3001/get\", {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n\nasync function updateServer() {}\n\nasync function addServer() {\n  const response = await fetch(\"http://localhost:3001/add\", {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      _IP: \"127.0.0.1\",\n      _Name: \"Server1\",\n      _TypeName: \"t1.micro\",\n      _TypePPM: 1\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/eitan/Documents/dev/javascript/Severly/client/src/App.js"],"names":["React","App","addServer","getServers","response","fetch","method","mode","headers","data","json","console","log","updateServer","body","JSON","stringify","_IP","_Name","_TypeName","_TypePPM"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAEb,sBACD;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACD;AAAQ,QAAA,OAAO,EAAE,MAAMC,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADC;AAOD;;KATQD,G;;AAWT,eAAeE,UAAf,GAA4B;AAC3B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;AACzDC,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,IAAI,EAAE,MAFmD;AAGzDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAHgD,GAA9B,CAA5B;AAKA,QAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAOA,IAAP;AACA;;AACD,eAAeI,YAAf,GAA8B,CAE7B;;AACD,eAAeX,SAAf,GAA2B;AAC1B,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;AACnDC,IAAAA,MAAM,EAAE,MAD2C;AAEzDC,IAAAA,IAAI,EAAE,MAFmD;AAGnDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAH0C;AAInDM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAC1BC,MAAAA,GAAG,EAAE,WADqB;AAE1BC,MAAAA,KAAK,EAAE,SAFmB;AAG1BC,MAAAA,SAAS,EAAE,UAHe;AAI1BC,MAAAA,QAAQ,EAAE;AAJgB,KAAf;AAJ6C,GAA9B,CAA5B;AAWA,QAAMX,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAOA,IAAP;AACA;;AAED,eAAeR,GAAf","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n\t<div className=\"App\">\n\t  <header className=\"App-header\">\n\t\t<button onClick={() => addServer()}>Add server</button>\n\t  </header>\n\t</div>\n  );\n}\n\nasync function getServers() {\n\tconst response = await fetch(\"http://localhost:3001/get\", {\n\t\tmethod: 'GET',\n\t\tmode: 'cors',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t});\n\tconst data = await response.json();\n\tconsole.log(data);\n\n\treturn data;\n}\nasync function updateServer() {\n\n}\nasync function addServer() {\n\tconst response = await fetch(\"http://localhost:3001/add\", {\n        method: 'POST',\n\t\tmode: 'cors',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n\t\t\t_IP: \"127.0.0.1\",\n\t\t\t_Name: \"Server1\",\n\t\t\t_TypeName: \"t1.micro\",\n\t\t\t_TypePPM: 1\n\t\t})\n\t});\n\tconst data = await response.json();\n\tconsole.log(data);\n\n\treturn data;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}